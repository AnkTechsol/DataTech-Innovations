{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhairya\\\\Desktop\\\\work\\\\ui_layout\\\\template\\\\my_component\\\\frontend\\\\src\\\\Cards.tsx\";\nimport React from 'react';\nimport './style.css';\nimport Carousel from 'react-elastic-carousel';\nimport Item from \"./Item\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  const breakPoints = [{\n    width: 1,\n    itemsToShow: 3\n  }, {\n    width: 550,\n    itemsToShow: 3\n  }, {\n    width: 768,\n    itemsToShow: 3\n  }, {\n    width: 1200,\n    itemsToShow: 3\n  }];\n  const items = ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight'];\n  const duplicatedItems = [...items, ...items];\n  const Cont = styled.div`\n    width : 1700px;\n`;\n  const renderPagination = _ref => {\n    let {\n      pages,\n      activePage,\n      onClick\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from(Array(pages), (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClick(index * 3) // Adjust the slide count as per your requirement\n        ,\n        style: {\n          margin: '0 5px',\n          backgroundColor: activePage === index * 3 ? '#00008B' : '#fff',\n          color: activePage === index * 3 ? '#fff' : '#00008B'\n        },\n        children: [index * 3 + 1, \" - \", index * 3 + 3, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Example to setup your carousel in react\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Cont, {\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          breakPoints: breakPoints,\n          isRTL: false,\n          enableAutoPlay: true,\n          autoPlaySpeed: 5000,\n          enableSwipe: true,\n          pagination: false,\n          renderPagination: renderPagination,\n          children: duplicatedItems.map((item, index) => /*#__PURE__*/_jsxDEV(Item, {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Carousel","Item","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","breakPoints","width","itemsToShow","items","duplicatedItems","Cont","div","renderPagination","_ref","pages","activePage","onClick","children","Array","from","_","index","style","margin","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","className","isRTL","enableAutoPlay","autoPlaySpeed","enableSwipe","pagination","map","item","_c","$RefreshReg$"],"sources":["C:/Users/Dhairya/Desktop/work/ui_layout/template/my_component/frontend/src/Cards.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './style.css';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport Item from \"./Item\";\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Cards = () => {\r\n\r\n  const breakPoints = [\r\n    { width: 1, itemsToShow: 3 },\r\n    { width: 550, itemsToShow: 3 },\r\n    { width: 768, itemsToShow: 3 },\r\n    { width: 1200, itemsToShow: 3 },\r\n  ];\r\n\r\n  const items = ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight'];\r\n\r\n  const duplicatedItems = [...items, ...items];\r\n\r\n  const Cont = styled.div`\r\n    width : 1700px;\r\n`;\r\n\r\n\r\nconst renderPagination = ({ pages, activePage, onClick }: { pages: number; activePage: number; onClick: (index: number) => void }) => {\r\n  return (\r\n    <div>\r\n      {Array.from(Array(pages), (_, index) => (\r\n        <button\r\n          key={index}\r\n          onClick={() => onClick(index * 3)} // Adjust the slide count as per your requirement\r\n          style={{\r\n            margin: '0 5px',\r\n            backgroundColor: activePage === index * 3 ? '#00008B' : '#fff',\r\n            color: activePage === index * 3 ? '#fff' : '#00008B',\r\n          }}\r\n        >\r\n          {index * 3 + 1} - {index * 3 + 3} {/* Adjust the slide count as per your requirement */}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n    \r\n  return (\r\n    <>\r\n       <h1 style={{ textAlign: \"center\" }}>Example to setup your carousel in react</h1>\r\n       <div className=\"App\">\r\n\r\n      <Cont>\r\n      <Carousel breakPoints={breakPoints} isRTL={false} enableAutoPlay={true} autoPlaySpeed={5000} enableSwipe={true} pagination={false} renderPagination={renderPagination} >\r\n          {duplicatedItems.map((item, index) => (\r\n            <Item key={index}>{item}</Item>\r\n          ))}\r\n        </Carousel>\r\n      </Cont>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Cards\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}